/**
 * This test shows switch can bind the value used for switching to a name
 */
type T {
  test "bind" {
    switch x := 0 {
      if 0 true
      else false
    }
  }

  test "use" {
    0 == switch x := 0 {
      if 0 x
      else x
    }
  }

  // typing rules for val apply
  test "val typing" {
    0 == switch x := 0 {
      if 0 (x : IntegerLiteral[32])
      else (x : int)
    }
  }

  test "type" <: noCompile[NAM_NOT_FOUND_OVERLOAD] {
    switch x := 0 {
      // note: this is a name issue, because no x of type long is visible
      if 0 (x : long)
      else (x : int)
    }
  }
}