/**
 * Ensure that recursive RT defaults result in correct applications
 */
type T {

  type def p(x:int,y:int) = x + y
  type def m(x:int,y:int) = x - y

  type def f(con : def (int, int) : int = p) : def (int, int) : int = con

  test "pass" {
    m == f(m)
  }

  test "use" {
    -1 == f(m)(1,2)
  }

  test "default" {
    3 == f()(1,2)
  }
}
