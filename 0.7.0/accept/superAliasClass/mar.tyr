/**
 * Check that a type alias can be used for a super type.
 */
class S {
  def f = 0
  var g = 1

  new (g := x : int);
}

type A := S;

class T <: A {
  override[f]
  def f = 2

  override[g]
  var g : int;

  new (g := x : int);

  new {
    A.new(4)
  }

  test "use S" {
    var s = new S(7)
    7 == s.g && 0 == s.f()
  }

  test "use A" {
    var s = new A(7)
    7 == s.g && 0 == s.f()
  }

  test "use T" {
    var s = new T(7)
    7 == s.g && 2 == s.f()
  }

  test "use T poly" {
    var s : A = new T(7)
    7 == s.g && 2 == s.f()
  }

  test "use T default" {
    var s : A = new T;
    4 == s.g && 2 == s.f()
  }
}
