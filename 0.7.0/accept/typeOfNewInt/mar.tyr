/**
 * @note tests correctness of .type and new for ints
 */
type T {
  test "basic" {
    // a correct implementation of this expression does not involve a 1, 7 or 8
    // as member of a block
    int == (7 + 1).type
  }
  test "literal" {
    // 0 : IntegerLiteral
    // + : (int, int) : int
    0.type != (7 + 1).type
  }
  test "inner" {
    0.type.class == 'ᚠ'.type.class
  }
  test "inner two" {
    // this can continue indefinitiely
    0.type.class.class == 'ᚠ'.type.class.class
  }
}
