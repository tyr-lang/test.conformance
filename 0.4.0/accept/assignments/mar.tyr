/**
 * test type conformity of assignments and initialization
 */
type MyInt {

  test "int var" {
    var v = 7;
    v.implicit() : int == 7
  }

  test "int var ref" {
    var v : int = 7;
    v : Ref[int] == 7
  }

  test "int val" {
    let v = 7;
    v : IntegerLiteral[32]
  }

  test "int val string" <: noCompile[NAM_NOT_FOUND_OVERLOAD] {
    let v = 7;
    // note: despite what one might be used to from other languages all static
    // access is subject to overload resolution and the error is that we could
    // not find a matching overload
    v : String
  }
}
