/**
 * repeat formal order defaults test, but with alias to external definitions
 */
type Box := test.fo2.Box;
type InvBox := test.fo2.InvBox;

type T {
  test "box" <: noCompile[NAM_NOT_FOUND_OVERLOAD_SINGLE] {
    // note to self: this should not work because positional matching happens
    // before default evaluation
    1 == new Box[1].v
  }
  test "box explicit" {
    1 == new Box[D := 1].v
  }
  test "invbox" {
    1 == new InvBox[1].v
  }

  test "invbox double" <: noCompile[NAM_NOT_FOUND_OVERLOAD_SINGLE] {
    1 == new InvBox[1.0].v
  }
}
