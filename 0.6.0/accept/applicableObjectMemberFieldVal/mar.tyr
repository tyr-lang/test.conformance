/**
 * Ensure implicits on object member applications are performed as intended
 *
 * @note this variant stores the functions in fields
 */
public class Box[T : Type] {
  var x : T;

  def r(this : Ref[Box[T]], y : T) : Box[T] = this

  public new (x := x : T);
}

public class T {
  type var a = new Box[int](7);

  // use type inference to create the function type
  type val f = a.r
  type val g = Box[int].r

  test "use r" {
    7 == f(a, a.x).x
  }
  test "use r static" {
    7 == g(a, a.x).x
  }
}
