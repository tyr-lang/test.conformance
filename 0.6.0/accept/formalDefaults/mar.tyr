/**
 * test order of and dependency between formal parameters using a default value
 */
public type Box[T : Type = int, D : T]{
  public val v : T;

  public new (v := V : T = D){}
}

public type InvBox[D : T, T : Type = int]{
  public val v : T;

  public new (v := V : T = D){}
}

type T {
  test "box" <: noCompile {
    // note to self: this should not work because positional matching happens
    // before default evaluation
    1 == new Box[1].v
  }
  test "box explicit" {
    1 == new Box[D := 1].v
  }
  test "invbox" {
    1 == new InvBox[1].v
  }

  test "invbox double" <: noCompile {
    1 == new InvBox[1.0].v
  }
}
