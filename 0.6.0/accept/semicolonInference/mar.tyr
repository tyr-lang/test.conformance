/**
 * I finally chose to disable semicolon inference in atomic expressions.
 *
 * @note without this extension, we would get a strange parse error from line 9
 */
type T {
  test "pre" {
    (
      true
      && true
    )
  }
  test "post" {
    (
      true &&
      true
    )
  }

  test "pre block" <: noCompile[NAM_NOT_FOUND_OVERLOAD_SINGLE] {
    {
      true
      && true
    }
  }

  test "pre block nedested" {
    {(
      true
      && true
    )}
  }

  test "pre block nedested loop" {
    {
      do {
        true
      } while (
      true
      && false
    )}
  }

  test "pre block nedested loop block simple" {
    {
      do {
        true
      } while {
      false
    }}
  }

  test "pre block nedested loop block" <: noCompile[NAM_NOT_FOUND_OVERLOAD_SINGLE] {
    {
      do {
        true
      } while {
      true
      && false
    }}
  }

  test "pre block nedested2" <: noCompile[NAM_NOT_FOUND_OVERLOAD_SINGLE] {
    {({
      true
      && true
    })}
  }
  test "post block" {
    {
      // this always caused the line to continue in the next one
      true &&
      true
    }
  }

  test "multi" {
    var b = "\n".bytes();
    
    !(
      true &&
      true && 
      false
    )
  }
}
