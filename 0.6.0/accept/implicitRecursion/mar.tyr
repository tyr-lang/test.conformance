/**
 * Check that infinite implicit recursion results in an error in finite time.
 *
 * @note if it would not, your compiler would hang at this test
 */
class Box[T : Type[any]] {
    def implicit : Box[Box[T]] = null
}

class T <: reflection.proxy[int] {
    def implicit : Box[T] = null

    test "die" <: noCompile[I_LIMIT_EXCEEDED, NAM_NOT_FOUND_OVERLOAD_SINGLE] {
        (new T).unsign()
    }
}
