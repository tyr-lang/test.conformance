/**
 * Test explicit override with multiple arguments.
 */
interface I {
  def fun (x : T) : int = 1
}
interface J <: I {
  def fun (x : I) : int = 2
}

class S {
  def fun (x : T) : int = 3
}

class T <: S, I, J {
  override [S.fun, I.fun, J.fun]
  def fun(x : I) := J.fun;

  test "call T" {
    var x = new T

    val r = x.fun(x)
    delete x
    2 == r
  }
  test "call S" {
    var t = new T
    var x : S = t

    val r = x.fun(t)
    delete x
    2 == r
  }
  test "call I" {
    var t = new T
    var x : I = t

    val r = x.fun(t)
    delete x
    2 == r
  }
  test "call J" {
    var t = new T
    var x : J = t

    val r = x.fun(t)
    delete x
    2 == r
  }
}
