/**
 * any... should have the semantics of C-style var args
 */
type T {
  type def f(va... : any){
    var it = va.iterator()
    while(it.hasNext()) {
      var e = it.next[byte]()
      // TODO print e or something
    }
  }

  test "use" {
    f(7, 8, "stuff")
  }

  test "empty" {
    f()
  }

  test "overload" {
    // there should be a test checking that overloading works and that concrete
    // functions are preferred
    false
  }

  test "printf" {
    // there should be a test using printf with correct type
    false
  }
}
