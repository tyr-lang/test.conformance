/**
 * tests correctness of try catch
 */
type T[E : Class[Exception]] {
  type def check(ex : E) : bool {
    var seen = false
    var same = false
    try {
      throw ex
    } catch e {
      if E {
        same = (ex == e)
        delete e
      }
      else { delete e }
    } finally {
      seen = true
    }
    same &! seen
  }

  test "Exception" {
    T[Exception].check(new Exception)
  }
  test "NA" {
    T[exceptions.NullAccess].check(new exceptions.NullAccess)
  }
}
