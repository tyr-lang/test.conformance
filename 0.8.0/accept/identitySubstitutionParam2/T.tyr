/**
 * Perform several identity substitutions to ensure that changes to the
 *  substitution theory result in correct CFGs.
 */
type T:

type def id (p : Block[void]) = p.eval()

type def twice(p : Block[void]) = id(p)

type def q1(p : Block[void]) = twice(p)

type def q2(p : Block[void]) = id(id(id(id(p))))

type def qm(p : Block[void]) = id(twice(id(p)))

test "q1 identity" {
  q1({return true})
}

test "q2 identity" {
  q2({return true})
}

test "qm identity" {
  qm({return true})
}

test "q1 identity re" {
  true && q1({return true})
}

test "q2 identity re" {
  true && q2({return true})
}

test "qm identity re" {
  true && qm({return true})
}