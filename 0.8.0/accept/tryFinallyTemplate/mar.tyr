/**
 * tests correctness of try catch
 */
type T[E : Class[Exception]] {
  type def check(ex : E) : bool {
    var seen = false
    var same = false
    try {
      try {
        throw ex
      } finally {
        seen = true
      }
    } catch e {
      if E {
        same = (ex == e)
        delete e
      }
      else { delete e }
    }
    same &! seen
  }

  test "Exception" {
    val ex = new Exception
    T[ex.type.T].check(ex)
  }
  test "NA" {
    val ex = new exceptions.NullAccess
    T[ex.type.T].check(ex)
  }
}
