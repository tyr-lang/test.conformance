/**
 * Check translation of provable tests
 *
 * TODO there should be a notProvable failing if the test body can be compressed to a BoolLiteral
 */
type T {
  test "trivial" <: provable {
    0 != 1
  }

  test "val" <: provable {
    let r = 0;
    0 == r && r != 1
  }

  test "null" <: provable {
    val r = if (null == "") 1 else 0;
    0 == r && r != 1
  }
}
