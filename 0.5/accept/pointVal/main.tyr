/**
 * Test flat structures.
 */
type point {

  val x : int;
  val y : int;

  new (x := x : int, y := y : int);

  def swap : point {
    return new point(y, x)
  }

  def + (p : point) : point {
    new point(x + p.x, y + p.y);
  }

  def * (s : int) : point {
    new point(s * x, s * y);
  }

  def == (p : point) : bool = (x == p.x) & y == p.y


  test "new" <: noCompile {
    val p = new point()
  }

  test "plain new" <: noCompile {
    new point()
  }

  test "new params" {
    val p = new point(1, 2)
  }

  test "swap" {
    val p = new point(1, 2)
    !(p == p.swap())
  }

  test "swap 2" {
    val p = new point(2, 2)
    p == p.swap()
  }
}
