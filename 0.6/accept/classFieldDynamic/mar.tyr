/**
 * Check class fields
 */
class S {
  class val name : String = "S";
}

class T <: S {
  // overrides S
  class val name : String = "T";

  test "direct access" {
    "T" == T.name && "S" == S.name
  }

  test "virtual access" {
    val x = new T
    val s : S = x;
    val r = "T" == x.name && "T" == s.name
    delete x
    r
  }

  test "sta/dta access" {
    val x = new T
    val s : S = x;
    // note: using the instance produces the same code as using .class here.
    // Nonetheless, .class cannot be used as .class cannot be typed precisely in
    // Tyr 0.6.
    val r = "T" == s.name && "S" == s.type.name
    delete x
    r
  }
}
